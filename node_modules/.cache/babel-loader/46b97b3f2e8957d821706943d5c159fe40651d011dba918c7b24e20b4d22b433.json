{"ast":null,"code":"var _jsxFileName = \"C:\\\\My_Portfolio\\\\Updated-portfolio-main\\\\src\\\\components\\\\Projects\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport AnimatedLetters from '../AnimatedLetter';\nimport Loader from 'react-loaders';\nimport LMS from '../../assets/images/L M S.jpg';\nimport MIT from '../../assets/images/E_MIT.jpg';\nimport BRW from '../../assets/images/BREW.jpeg';\nimport WF from '../../assets/images/WF.jpeg';\nimport EDEMY from '../../assets/images/EDEMY.png';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [letterClass, setLetterClass] = useState('text-animate');\n  const projArray = ['M', 'y', ' ', 'P', 'r', 'o', 'j', 'e', 'c', 't', 's'];\n  useEffect(() => {\n    setTimeout(() => {\n      setLetterClass('text-animate-hover');\n    }, 4000);\n  }, []);\n  const projectImages = [LMS, MIT, EDEMY, WF, BRW, 'https://via.placeholder.com/150'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container home-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-zone\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(AnimatedLetters, {\n            letterClass: letterClass,\n            strArray: projArray,\n            idx: 15\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects-div\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"projects-grid\",\n            children: projectImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-item\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: image,\n                alt: `Project ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"semi-circle-spin\",\n      active: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Projects, \"YlPNN7oJ+6mzs0fohZppsFcng1g=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useEffect","useState","Link","AnimatedLetters","Loader","LMS","MIT","BRW","WF","EDEMY","jsxDEV","_jsxDEV","Fragment","_Fragment","Projects","_s","letterClass","setLetterClass","projArray","setTimeout","projectImages","children","className","strArray","idx","fileName","_jsxFileName","lineNumber","columnNumber","map","image","index","src","alt","type","active","_c","$RefreshReg$"],"sources":["C:/My_Portfolio/Updated-portfolio-main/src/components/Projects/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AnimatedLetters from '../AnimatedLetter';\r\nimport Loader from 'react-loaders';\r\nimport LMS from '../../assets/images/L M S.jpg';\r\nimport MIT from '../../assets/images/E_MIT.jpg';\r\nimport BRW from '../../assets/images/BREW.jpeg';\r\nimport WF from '../../assets/images/WF.jpeg';\r\nimport EDEMY from '../../assets/images/EDEMY.png';\r\n\r\n\r\nimport './index.scss';\r\n\r\nconst Projects = () => {\r\n  const [letterClass, setLetterClass] = useState('text-animate');\r\n  const projArray = ['M', 'y', ' ', 'P', 'r', 'o', 'j', 'e', 'c', 't', 's'];\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLetterClass('text-animate-hover');\r\n    }, 4000);\r\n  }, []);\r\n\r\n  const projectImages = [\r\n     LMS,\r\n     MIT,\r\n    EDEMY,\r\n    WF,\r\n    BRW,\r\n    'https://via.placeholder.com/150',\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container home-page\">\r\n        <div className=\"text-zone\">\r\n          <h1>\r\n            <AnimatedLetters letterClass={letterClass} strArray={projArray} idx={15} />\r\n          </h1>\r\n          <div className=\"projects-div\">\r\n            <div className=\"projects-grid\">\r\n              {projectImages.map((image, index) => (\r\n                <div key={index} className=\"project-item\">\r\n                  <img src={image} alt={`Project ${index + 1}`} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Loader type=\"semi-circle-spin\" active={true} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}